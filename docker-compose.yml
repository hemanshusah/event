version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gc-postgres
    environment:
      POSTGRES_DB: growth_catalyst
      POSTGRES_USER: gc_user
      POSTGRES_PASSWORD: gc_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schemas:/docker-entrypoint-initdb.d
    networks:
      - gc-network

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: gc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gc-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: gc-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://gc_user:gc_password@postgres:5432/growth_catalyst
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/api-gateway:/app
      - /app/node_modules
    networks:
      - gc-network

  # Web Admin
  web-admin:
    build:
      context: ./web-admin
      dockerfile: Dockerfile
    container_name: gc-web-admin
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_ENV=development
    depends_on:
      - api-gateway
    volumes:
      - ./web-admin:/app
      - /app/node_modules
    networks:
      - gc-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: gc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - web-admin
    networks:
      - gc-network

volumes:
  postgres_data:
  redis_data:

networks:
  gc-network:
    driver: bridge
